grammar de.nittka.tooling.jtag.Jtag with org.eclipse.xtext.common.Terminals

generate jtag "http://www.nittka.de/tooling/jtag/Jtag"

Model:
	JtagConfig|JtagSearches|Folder;

JtagConfig: 
	({JtagConfig}) |
	(types+=CategoryType+)
;

JtagSearches:
	searches+=Search+
;

CategoryType: "categoriesFor" name=ID (description=STRING)? "{"
	category+=Category (","category+=Category)*
	"}"
;
Category: name=ID (description=STRING)? 
	(
		("{"category+=Category (","category+=Category)*"}")
	)?;

Search:
	"search" ("named" name=ID)?
	search=SearchExpression
	(("ignore" ignore+=STRING)("," ignore+=STRING)*)?
;

SearchExpression returns SearchExpression:
	OrSearchExpression
;

OrSearchExpression returns SearchExpression:
	AndSearchExpression ({OrSearchExpression.left=current} "||" right=AndSearchExpression)*
;

AndSearchExpression returns SearchExpression:
	AtomicSearchExpression ({AndSearchExpression.left=current} "&&" right=AtomicSearchExpression)*
;

AtomicSearchExpression returns SearchExpression:
	{NegationSearchExpression}'!' negated=AtomicSearchExpression |
	SearchReference |
	ParenthesizedSearchExpression |
	CategorySearch|
	TagSearch|
	TextSearch|
	DateSearch
;


ParenthesizedSearchExpression returns SearchExpression:
	'(' SearchExpression')'
;

SearchReference returns SearchExpression:
	"reuse" {SearchReference} search=[Search]
;

CategorySearch returns SearchExpression:
	"category" {CategorySearch} category=ShortCut
	(orAbove?="orAbove"? & orBelow?="orBelow"?)
;

TagSearch returns SearchExpression:
	"tag" {TagSearch} tag=ID
;

TextSearch returns SearchExpression:
	"text" {TextSearch} text=STRING
;

DateSearch returns SearchExpression:
	"date" {DateSearch} ((exact=SearchDate) | (("from" from=SearchDate) ("to" to=SearchDate)?) | "to" to=SearchDate)
;

Folder:
	"folder" description=STRING
	(("ignore"":" ignore+=STRING)("," ignore+=STRING)*)?
	categories+=CategoryRef*
	(("tags"":" tags+=ID)("," tags+=ID)*)?

	files+=File*
;

File: 
	fileName=FileName
	date=Date? 
	title=STRING?
	categories+=CategoryRef*
	(("tags"":" tags+=ID)("," tags+=ID)*)?
	("description" description=STRING)?
	"."
;

FileName: fileName=(FileNameWithExtension|STRING);

CategoryRef: type=[CategoryType] ":" (categories+=[Category] ("," categories+=[Category])*)";"?;
ShortCut: type=[CategoryType]":" category=[Category];

FileNameWithExtension hidden(): FileNameSegment'.'FileNameSegment;
FileNameSegment hidden(): ID|"description"|"tags"|"folder"|"ignore"|"from"|"to"|"date"|"search"|"text"|"tag"|"category"|"reuse"|"named";
Date hidden():INT"-"INT"-"INT;
SearchDate hidden(): (INT|"?")"-"(INT|"?")"-"(INT|"?");
terminal ID: ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*;

